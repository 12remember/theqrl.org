<?xml version="1.0" encoding="UTF-8"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0" xmlns:cc="http://cyber.law.harvard.edu/rss/creativeCommonsRssModule.html">
    <channel>
        <title><![CDATA[The Quantum Resistant Ledger - Medium]]></title>
        <description><![CDATA[Cryptography with longevity. A post-quantum secure blockchain featuring a stateful signature scheme and unparalleled security. - Medium]]></description>
        <link>https://medium.com/the-quantum-resistant-ledger?source=rss----507e55639b6c---4</link>
        <image>
            <url>https://cdn-images-1.medium.com/proxy/1*TGH72Nnw24QL3iV9IOm4VA.png</url>
            <title>The Quantum Resistant Ledger - Medium</title>
            <link>https://medium.com/the-quantum-resistant-ledger?source=rss----507e55639b6c---4</link>
        </image>
        <generator>Medium</generator>
        <lastBuildDate>Thu, 29 Nov 2018 18:35:02 GMT</lastBuildDate>
        <atom:link href="https://medium.com/feed/the-quantum-resistant-ledger" rel="self" type="application/rss+xml"/>
        <webMaster><![CDATA[yourfriends@medium.com]]></webMaster>
        <atom:link href="http://medium.superfeedr.com" rel="hub"/>
        <item>
            <title><![CDATA[Bittrex Exchange Migration: Proper liquidity secured for The QRL!]]></title>
            <link>https://medium.com/the-quantum-resistant-ledger/bittrex-exchange-migration-proper-liquidity-secured-for-the-qrl-df41045497e3?source=rss----507e55639b6c---4</link>
            <guid isPermaLink="false">https://medium.com/p/df41045497e3</guid>
            <category><![CDATA[qrl]]></category>
            <category><![CDATA[cryptocurrency]]></category>
            <category><![CDATA[bittrex]]></category>
            <dc:creator><![CDATA[Jack Matier]]></dc:creator>
            <pubDate>Tue, 20 Nov 2018 20:54:10 GMT</pubDate>
            <atom:updated>2018-11-26T16:03:24.093Z</atom:updated>
            <content:encoded><![CDATA[<h3>Bittrex Exchange Migration: liquidity secured for mainnet QRL!</h3><figure><img alt="" src="https://cdn-images-1.medium.com/max/1024/1*vxh2w-LbTpoHkHPDI_ihGg.png" /></figure><p>We are delighted to announce that <a href="https://bittrex.com"><strong>Bittrex</strong></a> will be migrating to <strong>QRL mainnet</strong> on the <strong>4th of December 2018</strong>. You can read their announcement <a href="https://bittrex.zendesk.com/hc/en-us/articles/360001472046-Support-for-the-Quantum-Resistant-Ledger-QRL-blockchain-upgrade"><strong>here</strong></a> in full.</p><p>The QRL is the first fully post-quantum blockchain ecosystem designed from the ground up with a core of:</p><ul><li>multiple implementations for qrl node (python, go)</li><li>desktop GUI wallet (mac, windows, linux)</li><li>a fantastic <a href="https://wallet.theqrl.org/">web-wallet</a> with built in features such as document notarisation and full token support</li><li>CLI Wallet</li><li>our trusty web e<a href="https://explorer.theqrl.org/">xplorer</a></li><li>growing <a href="https://docs.theqrl.org">documentation</a></li><li><a href="https://api.theqrl.org">API</a> — we are easy to build into!</li><li>And shortly to be released — a fully compliant Ledger implementation and mobile wallet support (iOS and Android support)..</li></ul><p>Remember that our core code has been extensively audited by red4sec and x41 D-sec to ensure it is enterprise grade. Plus we have an incredibly exciting roadmap we can’t wait to build out.</p><h3>Bittrex</h3><p>We would like to thank the Bittrex team for their professionalism in working closely with us on developing the necessary architecture to ensure smooth exchange integration.</p><p><a href="https://theqrl.org">The Quantum Resistant Ledger</a> and <a href="https://bittrex.com">Bittrex</a> have a long history and we are proud they are the first major platform to be integrating the QRL mainnet.</p><p>As a project featuring cutting edge post-quantum cryptography, the QRL was not trivial to integrate — our crypto is peculiar and strange! But that is what sets our project apart from every other blockchain in the crypto ecosystem.</p><p>After extensive work between our developers and the Bittrex team, we are pleased that further integration with other platforms should now be a far smoother process. We encourage any organisations interested in joining with the QRL to reach out via email or on <a href="https://twitter.com/QRLedger">Twitter </a>or <a href="https://discord.gg/jBT6BEp">Discord</a>.</p><p>On that note we have another exciting future relationship to announce in the coming weeks.</p><h3>Migration deadline</h3><p>Following Bittrex migration our previous token will be officially deprecated.</p><p>We will set a hard deadline for <strong>28th February 2019 </strong>for users to migrate using our automated migration <a href="http://migration.theqrl.org">portal</a>. For further help on this process you can always contact the team via <a href="http://support@theqrl.org">support@theqrl.org</a> or discuss with the team on <a href="https://discord.gg/jBT6BEp">Discord</a>.</p><figure><img alt="" src="https://cdn-images-1.medium.com/max/1024/1*uvXxBT9GzqLSuO5Ue_CcTQ.jpeg" /><figcaption>User art from Discord user SnannerB</figcaption></figure><p>Thank you for your patience and cheers from the QRL family!</p><img src="https://medium.com/_/stat?event=post.clientViewed&referrerSource=full_rss&postId=df41045497e3" width="1" height="1"><hr><p><a href="https://medium.com/the-quantum-resistant-ledger/bittrex-exchange-migration-proper-liquidity-secured-for-the-qrl-df41045497e3">Bittrex Exchange Migration: Proper liquidity secured for The QRL!</a> was originally published in <a href="https://medium.com/the-quantum-resistant-ledger">The Quantum Resistant Ledger</a> on Medium, where people are continuing the conversation by highlighting and responding to this story.</p>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[Community: Nominations]]></title>
            <link>https://medium.com/the-quantum-resistant-ledger/community-nominations-bc4a1f5d5995?source=rss----507e55639b6c---4</link>
            <guid isPermaLink="false">https://medium.com/p/bc4a1f5d5995</guid>
            <category><![CDATA[cryptocurrency]]></category>
            <category><![CDATA[qrl]]></category>
            <category><![CDATA[blockchain]]></category>
            <category><![CDATA[community]]></category>
            <dc:creator><![CDATA[Jack Matier]]></dc:creator>
            <pubDate>Thu, 01 Nov 2018 18:51:59 GMT</pubDate>
            <atom:updated>2018-11-01T18:51:59.014Z</atom:updated>
            <content:encoded><![CDATA[<h3>Community Nominations</h3><figure><img alt="" src="https://cdn-images-1.medium.com/max/1024/1*VJIc1dUL1jlGO_atmegZqA.jpeg" /></figure><p>Our community contains an amazing assortment of people that have a wide range of professions and origins. <em>Many</em> of those people continually go above and beyond in improving QRL and furthering Quantum Computing Awareness in the blockchain space.</p><p>It’s time we recognised these people who go above and beyond, which we will do with <em>nominations.</em></p><p><strong><em>Nominations </em></strong>are a<strong><em> </em></strong>way for the <em>community</em> to point out <em>other</em> community members on a weekly basis who contribute positively to QRL or Quantum Computing in general. Of these people that the community points out, one will be selected to be <em>nominated </em>to receive 250 Quanta.</p><h3>How it works</h3><p>One requirement is that nominations are made through Discord, so if you’re not already signed up, do so <a href="https://discord.gg/jBT6BEp">here</a>.</p><p>Anyone can<em> </em>nominate a wide variety of people active in different platforms like Reddit, Medium, Twitter, and Discord (more added as necessary). These people don’t <em>have</em> to be active in our community either, as we will reach out.</p><p>The nominations are gathered <em>weekly </em>and settled at Monday’s meeting, with an award of 250 Quanta (at the mercy of scheduling and other such conflicts of course). We do take into heavy consideration how many <em>votes</em> a person has, <em>however</em>, also reserve the final say (to prevent novelty votes from reigning supreme — this is the internet after all).</p><p>Once a person has been nominated, contacted, <em>and</em> awarded, they are exempt from winning a nomination for 8 weeks.</p><p>On a final note, these are for <em>people</em>, not Companies and/or Organisations.</p><h4>Nominating (how it works, technically)</h4><p>Nominating is easy, in the <em>butler</em> channel on discord you can add:</p><pre>nominate add [reddit/discord/twitter/medium/github] username</pre><p>or remove (only your own nomination, of course):</p><pre>nominate remove [reddit/discord/twitter/medium/github] username</pre><p>If you want to see the <em>current</em> nominations:</p><pre>nominate list</pre><p>To see nominations from previous weeks (but not necessarily the winners), you’ll need to specify the week # (‘w’ is optional):</p><pre>nominate list W15</pre><h3>What we’re looking for</h3><p>Want to be in line for a nomination? Bringing awareness/contributions to QRL or Quantum Computing in general is a good mindset to start from.</p><p>This can include:</p><ul><li>Code Contributions</li><li>User Art</li><li>Github Issues</li><li>Positive social contribution online</li></ul><h3>When is this starting?</h3><p>We’ll be opening up nominations on Tuesday, November 6th, 2018 and having our first settlement, assuming an appropriate nominee is found, on Monday, November 12th, 2018.</p><img src="https://medium.com/_/stat?event=post.clientViewed&referrerSource=full_rss&postId=bc4a1f5d5995" width="1" height="1"><hr><p><a href="https://medium.com/the-quantum-resistant-ledger/community-nominations-bc4a1f5d5995">Community: Nominations</a> was originally published in <a href="https://medium.com/the-quantum-resistant-ledger">The Quantum Resistant Ledger</a> on Medium, where people are continuing the conversation by highlighting and responding to this story.</p>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[Post-quantum secure multisignature wallets]]></title>
            <link>https://medium.com/the-quantum-resistant-ledger/post-quantum-secure-multisignature-wallets-321f75323e50?source=rss----507e55639b6c---4</link>
            <guid isPermaLink="false">https://medium.com/p/321f75323e50</guid>
            <category><![CDATA[qrl]]></category>
            <category><![CDATA[blockchain]]></category>
            <category><![CDATA[multisignature]]></category>
            <category><![CDATA[post-quantum]]></category>
            <dc:creator><![CDATA[Peter Waterland]]></dc:creator>
            <pubDate>Sun, 21 Oct 2018 16:53:19 GMT</pubDate>
            <atom:updated>2018-10-21T16:53:19.549Z</atom:updated>
            <content:encoded><![CDATA[<p>Whilst our current plan is to transition to an abstracted unified transaction format with the release of our ‘silicon’ smart contract platform (pencilled for release mid 2019), we have decided internally to integrate multisignature functionality into the QRL early in our upcoming hard fork.</p><p>As this brief blog will describe this adds some unique and powerful functionality to the chain and in doing so will be the first example in the world of post-quantum secure multisignature technology in the wild.</p><h3>What actually is ‘multisig’?</h3><figure><img alt="" src="https://cdn-images-1.medium.com/max/640/1*l3D93DHhbZV3A4RTLe8C0A.jpeg" /><figcaption>multisig not multipass!</figcaption></figure><p>“Multisig” or <a href="https://en.bitcoin.it/wiki/Multisignature">multiple signature transactions</a> require one or more different valid signatures to transfer funds from a special construct called a multisignature address to a destination address. The idea being that funds held in a multisignature address cannot be spent without the cryptographic agreement of a specified number of parties.</p><p>A multisig address can be setup with a certain number of addresses able to take part (<em>n</em>), of which a specified number (<em>m</em>) must provide valid signatures together for a multisig transaction to be valid and spendable. Thus, a multisig address may be said to require <em>m of n</em> signatures.</p><p>An example would be a multisig address which includes three signatory addresses but only requires two signatures for funds to move. This would be: <em>m of n</em> equals 2<em> of </em>3.</p><p>What all of this means in practice is that it allows custody and control of funds to be made much more transparently secure than current reliance upon access via a single private key or wallet. This is important for bigger clients who may wish to use a particular chain such as institutional investors, hedge funds, etc.</p><h3>QRL multisig</h3><p>So how will it work in the QRL? Is it different from other existing solutions? As usual we have to do things slightly differently because of our post-quantum signature scheme XMSS.</p><p>Briefly, we will introduce the new tx subtypes <em>multisig_create </em>and <em>multisig_spend </em>in the next hard fork, introducing hard-coded functionality which is immune to the multisig issues seen previously with ethereum.</p><p>Creating a new multisig address which can be seen on the explorer and receive funds like any other address is simple — just send a <em>multisig_create </em>transaction. This transaction incorporates a list of valid co-signers (addresses or public keys) and thus <em>n</em>, the weighting of each signatory, <em>w</em>, and the required number of signatories for a successful spend — the <em>m</em>.</p><figure><img alt="" src="https://cdn-images-1.medium.com/max/1008/1*d18vunKh58PN23w72J4zRg.png" /><figcaption>example weighting of a multisignature address</figcaption></figure><p>What do you mean by ‘weighting’? In conventional multisig each signature counts as a single vote. So, to reach an <em>m</em> of three requires three signatures. Whilst this remains default behaviour in the QRL, our implementation allows a specific signatory address to carry more voting weight than another. We implement this simply by attaching an integer value to each party during multisig address formation.</p><p>An example of this would be a new multisig address created in which <em>m of n</em> is 4 of 7. Signatory address 1 has weighting 3, whilst all other signers have weighting 1. Thus, to move funds successfully from the multisig address if signatory address 1 and 2 both sign a valid transaction, then 4 of 7 is satisfied and the transaction will be valid. Similarly, if signatory address 2, 3, 4 and 5 sign a valid transaction then this too would be valid and allow the funds to be spent.</p><p>Alternatively, one could create a new multisig address where one address has functional spending control. One could have an <em>m</em> of four required signatures, with an <em>n</em> of four signatory addresses. If address 1 had a weighting of 3, and all the rest had a weighting of 1, then even if addresses 2, 3, and 4 all signed, they would not have the 4 of 4 required signatures to spend.</p><figure><img alt="" src="https://cdn-images-1.medium.com/max/528/1*Rf32CxWwOEH_NOs-A3EpHA.png" /></figure><figure><img alt="" src="https://cdn-images-1.medium.com/max/528/1*SHZZfe7J-U5kE6VUK2RrbQ.png" /></figure><figure><img alt="" src="https://cdn-images-1.medium.com/max/528/1*W_5auSQVL2AB96mkxpoxJQ.png" /></figure><figure><img alt="" src="https://cdn-images-1.medium.com/max/528/1*Qi63M02T0iGrrhH9uBuKAQ.png" /><figcaption>multisig spend examples</figcaption></figure><p>This variability allows specific control rights to be delegated to funds held in a multisignature wallet — which we think is a very powerful concept, that can be applied in a variety of ways to useful effect.</p><h3>So how will this work in practice?</h3><p>A user can create a multisignature address through the multisig section of the <em>webwallet</em>. A number of co-signers and their weightings are added to the address page, with a minimum weighted number of co-signers for a valid spend recorded. This is then propagated to the network and confirmed in the chain. The address may be looked upon in the explorer and the above details seen and verified by anyone.</p><p>Funds can be sent to the new address like any other. To spend funds however requires the sufficient signatories to send a <em>multisig_spend </em>transaction from their <em>webwallet</em>. Once the <em>m of n </em>for the multisignature address is satisfied then funds will transfer when the last valid <em>multisig_spend</em> transaction reaches the threshold for <em>m</em> set in the <em>multisig_create</em> transaction.</p><p>This is a slightly different approach to bitcoin where the spend transaction requires a script which is signed by each party in turn and then propagated to the network as a single spend transaction.</p><p>In our case the <em>multisig_spend</em> transaction simply signs the: multisignature address, a nonce or 32 byte shared key (which for convenience may be randomly generated in the webwallet to be shared amongst co-signers), the destination address, amount and fee.</p><p>So the only information co-signers need to know is the amount (and fee) and destination of the intended funds and the shared key (for example ‘some collection of random words’).</p><p>Why did we choose this different method of implementing multisignature support which requires each co-signer to make a spend transaction? Because the QRL has a stateful signature scheme, sending XMSS signatures from your wallet off-chain to a third party is not recommended. Such behaviour may lead to inadvertent one-time-signature reuse and reduce the security of the system. So the development team feel this is a more robust method of achieving full multisignature address support without increasing user risk at all.</p><h3>When?</h3><p>In actual fact the changes are fairly minor to the node and state machine to introduce completely post-quantum secure multisignature functionality. Additional changes are planned to our <em>webwallet</em> to make this functionality work straight out-of-the-box. We plan to bundle some state machine backend optimisations in the planned upgrade, which as it involves new transaction subtypes will be a hard fork upgrade.</p><p>Originally, like monero, we had targeted an approximately six monthly hard fork schedule which means we will be planning to hard fork with community consensus in the next 6–8 weeks with a precise blockheight for the fork to be announced in due course.</p><img src="https://medium.com/_/stat?event=post.clientViewed&referrerSource=full_rss&postId=321f75323e50" width="1" height="1"><hr><p><a href="https://medium.com/the-quantum-resistant-ledger/post-quantum-secure-multisignature-wallets-321f75323e50">Post-quantum secure multisignature wallets</a> was originally published in <a href="https://medium.com/the-quantum-resistant-ledger">The Quantum Resistant Ledger</a> on Medium, where people are continuing the conversation by highlighting and responding to this story.</p>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[150k in 100 days]]></title>
            <link>https://medium.com/the-quantum-resistant-ledger/150k-in-100-days-902c4749c2e1?source=rss----507e55639b6c---4</link>
            <guid isPermaLink="false">https://medium.com/p/902c4749c2e1</guid>
            <category><![CDATA[qrl]]></category>
            <category><![CDATA[blockchain-development]]></category>
            <category><![CDATA[cryptocurrency]]></category>
            <category><![CDATA[blockchain]]></category>
            <dc:creator><![CDATA[Jack Matier]]></dc:creator>
            <pubDate>Wed, 17 Oct 2018 17:32:16 GMT</pubDate>
            <atom:updated>2018-10-17T18:30:02.827Z</atom:updated>
            <content:encoded><![CDATA[<h4>A small look at our blockchain</h4><p>150,027 blocks in 103.62 days, specifically.</p><p>Before I get into it, I would like to take a moment to thank Kaushal (Discord username cyyber), without which this would not have happened. I have attempted to select out some fun, interesting and telling statistics from our first 150,000 blocks to help educate our community.</p><figure><img alt="" src="https://cdn-images-1.medium.com/max/960/1*xizQknbpT9ImcT3dRmBZxA.png" /></figure><h3>Transfers</h3><p>There’s been 142,156 transfers (not including coinbase), which represents just under 1 transfer a block on <em>average</em>. However, digging deeper, there’s 114,087 “empty” blocks (blocks with just coinbase), meaning those 142k transfers were done in 35,940 blocks — or an average of ~4 transfers per block when excluding blocks with just the coinbase transaction.</p><p>The total Quanta transferred has been 31,847,174.275453055 (including migration). With the Delta between block 0 and block 150,027 being 8,952,602 seconds (or 103.62 Days), we can derive some other averages.</p><p>Average tx/day: 1,371.92<br>Average tx/hour: 22.87</p><p>Average blocks per day: 1447.85755646<br>Average blocktime: 59.6743786118 seconds<br><em>Target</em> blocktime 60 seconds</p><p>Average Quanta/day transferred: 307,351.52<br>Average Quanta/hour transferred: 5,122.53<br>Average Quanta/minute transferred: 85.37<br>Estimated upper Quanta mined/day*: 9,405<br>* Estimated as QRL follows an <a href="https://github.com/theQRL/QRL/blob/2a14a9fa52dc09591736f4512906bf67ff99c464/tools/EmissionModel.ipynb">exponential decay emission model</a></p><p>The total fees collected have been 673.763576565 Quanta, or 0.00473960702 Quanta per transaction on average. It should be noted that the default fee is 0.001 Quanta for typical transfers, and 0.25 for messages. Also, it should be noted that it’s possible to pay no fees for either transaction type.</p><p>It comes to no surprise that the maximum amount of Quanta transferred in a single transfer was from Genesis at 9,728,705.129449940 Quanta for tx hash <a href="https://explorer.theqrl.org/tx/2dee23409b273f21c200763b04119d63648f553c75f44964ec3c96765e642b3c">2dee23409b273f21c200763b04119d63648f553c75f44964ec3c96765e642b3c</a></p><h3>Blocks</h3><p>The largest block was block <a href="https://explorer.theqrl.org/block/146717">146717</a> with a size of 306.29 KB and also sets the record at 114 tx’s (~2 tx/s without a sweat).</p><p>Average block size was 2.95516 KB</p><h3>Messages</h3><p>There’s been 46 messages sent on the QRL blockchain with a total fee of 2.364300021 Quanta (0.051397827 Quanta average). The maximum fee paid for a message was 0.25 (which is also the default), indicating that people prefer to send their messages for less than the default fee! The minimum, as you can imagine, would be 0 — indicating some people simply will not pay if they don’t need to.</p><h3>Tokens</h3><p>203 tokens have been minted for a total combined network fee of 8.404321110 Quanta (0.041400597 Quanta average). The maximum fee paid was <a href="https://explorer.theqrl.org/tx/2ccd5368cd4d3818a699fb90e0aa19183cf5b5ff2d371ac9a5ae0dcb9a840c6f">5 Quanta</a>, which we can only imagine either was a mistake or generosity to the network gods.</p><p>There are fewer token transfers than tokens created with a mere 80 token transfers paying a total of 1.156410020 network fees for an average of 0.014455125 Quanta (the lowest average of the bunch by a factor of 4 until you encounter Slave transactions). Maximum fee was <a href="https://explorer.theqrl.org/tx/8a5a7cac1205b13841138327164110909eb48fd709ce9e62612f702697496445">1 Quanta</a> for the token ETC (etheriumclas).</p><h3>Slaves</h3><p>For those unaware, a slave transaction can include maximum 100 public keys. These addresses are allowed to act as slave and can move funds from the master address by signing themselves which is without using the signature of master address. This <em>effectively</em> allows for unlimited signature capacity from an address.</p><p>There have been 55 slave transactions, with a total fee of 0.079000000 Quanta, the majority of which was from a slave that paid a network fee of <a href="https://explorer.theqrl.org/tx/49e6c5ff8280d5b90ec692e2b4d75f4f1d0421c36201d020e4622c3e0778cbe3">0.050000000 Quanta</a>. With everything considered, the average fee was 0.001436364 Quanta (and even less if you exclude the outlier)</p><h3>Addresses</h3><p>Total Number of Addresses(including Slaves) : 6,213<br>Total Number of Addresses(excluding Slaves) : 3,280<br>Total Number of Addresses holding Quantas : 3,220</p><h3>Richlist</h3><p>While this is a blockchain with a public ledger, we have opted to only include the top 5 addresses to achieve some semblance of privacy.</p><pre>1. 38,953,556.583351<br>Q0109003493192e08affe87d57e254df3e15be3b8709a40f07e0fc550de60696c2d0333f7070e1d</pre><pre>2. 8,449,999.9978652<br>Q010600648cb22a04edbff712a3fa6d04530453d9a6117fba2ca38a51a3a5b0da742350db0ce225</pre><pre>3. 2,589,079.35757634<br>Q010500e74e97637db33374745538c90f58f0666bc058292bcaa8ca427c03f87479a66329ebe67d</pre><pre>4. 2,505,542.065134<br>Q010500e587fd07bb1c5ace98956d9aa6c347e7114ccb4ec7183baa54804cc8b974e91cc3b5617e</pre><pre>5. 2,362,675.358<br>Q0106004d84fe4e7b65ca11725eda53152dd57a8e922829ca339fe104db9b423390e05cbad6983e</pre><h3>Conclusion</h3><p>As we hope this blog has illustrated, the QRL network is functioning, and functioning well. With a growing number of nodes, transactions and wallets as it continues to mature, the QRL network has accomplished much in its first 100 days / 150,000 blocks.</p><p>Networks are often most vulnerable in their first 100 days, as security oversights are exploited and/or flaws in the code are manipulated by bad actors (there have been attempts, but no successes!). As happy as we are with the activity on the network, we are most proud of the general stability and security of the network.</p><p>As we often try to underline, absent baseline of dependability/security, much of the more exciting and complex things we hope to accomplish with the network (such as smart contracts, developed messaging, among other features) would not be possible or as practical an undertaking.</p><p>Thank you all again for taking this journey with us, you can expect more blogs like this around significant milestones in the network’s life (like the 1 year anniversary of its launch, etc).</p><img src="https://medium.com/_/stat?event=post.clientViewed&referrerSource=full_rss&postId=902c4749c2e1" width="1" height="1"><hr><p><a href="https://medium.com/the-quantum-resistant-ledger/150k-in-100-days-902c4749c2e1">150k in 100 days</a> was originally published in <a href="https://medium.com/the-quantum-resistant-ledger">The Quantum Resistant Ledger</a> on Medium, where people are continuing the conversation by highlighting and responding to this story.</p>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[Reflecting on Discover Blockchains Houston]]></title>
            <link>https://medium.com/the-quantum-resistant-ledger/reflecting-on-discover-blockchains-houston-f22bc37655e?source=rss----507e55639b6c---4</link>
            <guid isPermaLink="false">https://medium.com/p/f22bc37655e</guid>
            <category><![CDATA[cryptocurrency]]></category>
            <category><![CDATA[qrl]]></category>
            <category><![CDATA[blockchain]]></category>
            <category><![CDATA[discover-blockchains]]></category>
            <dc:creator><![CDATA[Adam Koltun]]></dc:creator>
            <pubDate>Fri, 21 Sep 2018 18:05:07 GMT</pubDate>
            <atom:updated>2018-09-21T18:05:07.072Z</atom:updated>
            <content:encoded><![CDATA[<p><em>TL;DR- Was in Houston over the weekend to speak at the Discover Blockchains Conference.</em></p><figure><img alt="" src="https://cdn-images-1.medium.com/max/900/1*Ww9mirQyHDSLhKN4SyiYPQ.jpeg" /></figure><p>Over the weekend, I had the opportunity to fly to Houston, Texas to speak at the <a href="https://discoverblockchains.com/">Discover Blockchains Conference</a> — which is a series of conferences that are somewhat more educational in nature than many of the other conferences I have attended so far this year. One of the main points of departure was that there was no exhibition hall or booths. It was purely stages and seats, and was wholly dedicated to the content being put on (with some nice complimentary refreshments as well).</p><p>The speakers and panels were divided into two tracks, and generally the subject matter of any two speakers/panels that were appearing at the same time were distinct enough that there was not a high likelihood of audiences facing tough choices. One example of this was my talk, which was at the same time as a talk about the pharmaceutical industry and blockchain technology, which would leave it unlikely that someone would feel torn about which to attend.</p><p>The lack of an exhibition hall or floor made for a much more compact conference. Functionally, this created a much more relaxed atmosphere, and also helped to establish a pattern whereby people would watch speakers, then take breaks at the refreshments station and chat. It also made it easy, as a speaker, to continue the conversation after one was done. Due to some technical difficulties at the start of my presentation (only ate up a few minutes, thankfully), I was not able to have the Q&amp;A portion at the end. However, I was able to ask any interested parties to meet me by the refreshments table, and indeed a small group of 6–10 people and I continued the conversation about quantum computing and blockchain technology for longer than my talk had been!</p><p>Generally, it seemed like there was a decent interest level in what I had to say. There were people taking pictures of various slides, and definitely a large number of attentive listeners in the audience (you can always tell when people are checked out, the heads go down and the phones come out), which, as a speaker, is always the goal.</p><p>This was a conference that tried to keep its daytime agenda focused on content, and had a specific networking event at the end of the day for some light libations and the usual exchanging of business cards and contact info. While I do not necessarily think this would be the best way to run <em>all</em> blockchain conferences, I did really appreciate it as a change-of-pace from some of the more Expo-style conferences I have attended previously.</p><p>From what I heard from some speakers who had presented at previous Discover Blockchains conferences, the one in Houston had a reasonably high draw, and perhaps unsurprisingly, had (I was told) somewhat more new faces to the scene than in previous locations, like Seattle.</p><p>Discover Blockchains did a good job of inviting a broad list of speakers, representing different elements of the blockchain/cryptocurrency industry. You had people representing projects, like me, as well as more distinctly focused people — like traders, GPU miners, and IoT specialists. While there was some breaking down into groups along those lines at the networking event, I was pleasantly surprised at the cross-pollination I both witnessed and directly experienced.</p><p>Overall, it was a pleasant and productive experience that was also in many ways distinct from the other conferences I have attended this year. I think that the price depression still being seen throughout the market at large has had a net effect of lowering some of the intensity of the moment, allowing some of the less-profit-focused ideas to be heard. To my mind, that is a good thing.</p><img src="https://medium.com/_/stat?event=post.clientViewed&referrerSource=full_rss&postId=f22bc37655e" width="1" height="1"><hr><p><a href="https://medium.com/the-quantum-resistant-ledger/reflecting-on-discover-blockchains-houston-f22bc37655e">Reflecting on Discover Blockchains Houston</a> was originally published in <a href="https://medium.com/the-quantum-resistant-ledger">The Quantum Resistant Ledger</a> on Medium, where people are continuing the conversation by highlighting and responding to this story.</p>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[Mainnet v1.1.5 is released]]></title>
            <link>https://medium.com/the-quantum-resistant-ledger/mainnet-v1-1-5-is-released-2db14b103332?source=rss----507e55639b6c---4</link>
            <guid isPermaLink="false">https://medium.com/p/2db14b103332</guid>
            <category><![CDATA[bech32]]></category>
            <category><![CDATA[silicon]]></category>
            <category><![CDATA[ethereum]]></category>
            <category><![CDATA[qrl]]></category>
            <category><![CDATA[post-quantum]]></category>
            <dc:creator><![CDATA[Peter Waterland]]></dc:creator>
            <pubDate>Fri, 14 Sep 2018 14:43:54 GMT</pubDate>
            <atom:updated>2018-09-14T14:58:20.649Z</atom:updated>
            <content:encoded><![CDATA[<p>This is a minor iterative update including the following changes:</p><ul><li>WalletDaemon is now allowed to create XMSS trees with minimum tree height of 6 (2⁶ signature capacity)</li><li>Master/slave XMSS reserved OTS reduced from 20 to 5</li><li>Improved error handling &amp; logging</li><li>WalletAPI: Changed balance data type from UInt64 to String</li><li>WalletAPI: Added IsValidAddress &amp; GetNodeInfo</li></ul><h3>‘It’s alive!’</h3><p>The QRL network is alive and well despite several attempts to DDOS the network — one of which being fairly sophisticated using malformed transactions. We are thankful for some early real-world testing outside of our two comprehensive audits.</p><p>Speaking of audits I am pleased to report our X-41 audit which focused upon our very special post-quantum cryptography XMSS (and various implementations across our ecosystem — node, webwallet, Ledger) has completed. We will publish the report as a community resource on <em>github</em> and discuss the audit in detail in an upcoming blog.</p><figure><img alt="" src="https://cdn-images-1.medium.com/max/790/1*Ica6A6at2vdRduGQqyw6pw.png" /></figure><p>With 100k blocks firmly in the rear view mirror we have a blog coming from @Jack detailing some interesting usage statistics gleaned from the chain thus far — additionally we will be expanding the <a href="http://explorer.theqrl.org">explorer</a> to demonstrate some realtime statistics of the chain as it grows in the future (including charts).</p><figure><img alt="" src="https://cdn-images-1.medium.com/max/264/1*-SHk3JbjRHvOBABhO-sYaQ.png" /><figcaption>when exch$@%#!!!</figcaption></figure><p>Some things in a project like the QRL are outside our control and although that can seem like inactivity to those outside the team discussion forum, keen observers of <em>github</em> can see very specific changes being made to areas like our <em>walletd</em> which track actual progress in this regard.</p><p>Integrating weird, stateful and unique pq-crypto like the QRL in a commercial system is not quite as straightforward as it appears compared with a casual user experience with the <a href="http://wallet.theqrl.org"><em>webwallet</em></a>.</p><h3>BECH32 addresses</h3><p>Andrew has finished integrating BECH32 addresses into the QRL. This means that in our next major hard fork release of the QRL will support both existing Q-addresses and a shorter, safer address B32 format which contains advanced error correction functionality.</p><p>A comparison between an existing Q-hexstring address and its’ q-bech32 counterpart is below:</p><pre>Q010500c0183a30c9170c8daf0a25d91f2102c49994a04e81a18286c1e345121f33037301c70c38</pre><pre>q1qyzspsqc8gcvj9cv3khs5fweruss93yejjsyaqdps2rvrc69zg0nxqmnxcx5p5</pre><p>More about BECH32 and why it is great can be read <a href="https://github.com/bitcoin/bips/blob/master/bip-0173.mediawiki">here</a>.</p><h3>Silicon</h3><figure><img alt="" src="https://cdn-images-1.medium.com/max/1024/1*9NiPR_KSXt0Mtc7c7UhxtQ.png" /></figure><p>The remainder of the blog will focus upon the first item on our roadmap to find attention — our smart address platform denoted internally as ‘project silicon’.</p><p>As the name suggests, this will add smart addresses with programmable logic capability to the QRL, a functionality more widely known as smart contracts on other platforms such as ethereum or eos.</p><p>See our draft QIP <em>here</em> for more technical details.</p><p>What is planned is a turing-incomplete highly limited set of logic instructions to allow programmed behaviours to be added to new QRL contract addresses without compromising security.</p><p>We aim to add functionality such as:</p><ol><li><strong>escrow payments</strong></li><li><strong>recurring payment schedules</strong></li><li><strong>atomic interchain swaps</strong></li><li><strong>decentralised automated multiple-signatory accounts</strong></li><li><strong>account logic based upon temporal events</strong></li><li><strong>account behaviour based upon oracle addresses</strong></li></ol><figure><img alt="" src="https://cdn-images-1.medium.com/max/500/1*wY71qxSuzP_Uq5tVDqvgKw.jpeg" /></figure><p>Our ultimate aim is to move the foundation QRL funds into a multiple signatory account controlled by trustees including the community to completely decentralise project funding for development and research goals in the future.</p><h3>Details, details, details?</h3><p>A new transaction subtype ‘<em>contract</em>’ will be added to the platform.</p><p>This will contain compiled logic-code in <em>bytecode</em> form and once a contract transaction is confirmed in the chain a new contract address is duly created.</p><p>QRL contracts are simple and deliberately designed to be so.</p><p>An example contract just has two parts: declarations of variables which the contract may access, and, the nuts and bolts — the logic-code of the contract.</p><pre>{variable_declarations} {logic-code}</pre><p>Contracts are written in ‘modified python with braces’ — with a tiny instruction set such as: if, then, for, send, send_message, destroy and several cryptographic instructions required for cross-chain atomic swaps.</p><p>It is designed to be readable and easy to write or learn.</p><p>Each contract has access to a sandboxed state machine and namespace. State is frozen to reduce the attack surface.</p><h3>Logic-code — rules or hooks</h3><p>Code in a QRL contract address must either be a ‘rule’ or a ‘hook’.</p><p>A ‘rule’ is logic-code which is executed when a contract-specific transaction event occurs i.e. a transaction is received by the contract address.</p><p>A ‘hook’ is logic-code which is executed at the point of instantiation to set events to occur at a future time, say a block-height, or the nearest unixtime to a block-header timestamp.</p><p>An example contract with a rule would be:</p><pre>{}</pre><pre>{</pre><pre>rule { </pre><pre>if (address.owner == transaction.address) then {destroy} </pre><pre>}</pre><p>In this rather useless contract (with no variable declarations at all), if a transaction is received from the QRL account which created the contract, then the contract address code is deactivated.</p><p>An example hook statement would be something like this:</p><pre>hook { if (chain.blockheight ≥ 100000) then {send (address.owner, address.balance-0.001, 0.001)}</pre><pre>}</pre><p>This would return the entire contract_address balance (less 0.001 fee) to the original contract creator at block-height 100k.</p><h3>Recurring payments</h3><p>What about something more complicated? A common problem with cryptocurrency is setting payments to occur in a planned fashion.</p><p>A set of recurring payments can easily be created by simply adding a series of ‘hook’ statements to a contract address. A get out clause can also be added with a ‘rule’. i.e.</p><pre>// variable declaration first<br>{addresses=[payment_address1]}<br>// logic-code to make two payments at specific block heights</pre><pre>{ <br>hook { if (chain.blockheight==40000) then {send (addresses[0], amount=220, fee=0.0001)}<br>}<br>hook { if (chain.blockheight==60000) then {send (addresses[0], amount=220, fee=0.0001)}<br>}</pre><pre>rule { if (transaction.type == message) and (transaction.address==address.owner) then {send (address.owner, address.balance-0.001, 0.001)}<br>}</pre><pre>}</pre><p>In this contract, two payments are planned at block-height 40k and 60k for 220 QRL. If a transaction of subtype ‘message’ is received from the contract creator address then all funds are returned (NB. currently ‘message’ transactions are broadcast without a recipient.)</p><h3>Multiple signatories</h3><p>Example of decentralised logic of a smart address using multiple signatories — in this case funds sent to this address are sent to another address if all three signatories have sent a specified message.</p><pre>// variable declaration<br>{<br>addresses=[trustee_one, trustee_two, trustee_three, destination_address]<br>x=False<br>y=False<br>z=False<br>}<br>// contract logic-code<br>{<br>rule {<br>for (t in address.transactions){<br> if (t.address == addresses[0].address)and (t.message == ‘MOVEALLFUNDS’) then {x=True}<br> if (t.address == addresses[1].address)and(t.message == ‘MOVEALLFUNDS’) then {y=True}<br> if (t.address == addresses[2].address) and (t.message == ‘MOVEALLFUNDS’) then {z=True}<br> }<br>if (x==True)and(y==True)and(z==True) then {send (addresses[3].address, address.balance-0.001, fee=0.001)}<br>}<br>}</pre><p>It can be seen that using message transactions from the owner or specified address in <em>addresses, </em>contract code may be activated or deactivated easily enough.</p><h3>Dead man’s switch</h3><p>Another example would be a dead man’s switch contract. In this scenario if a contract address specific event does not occur by a given time then the contract performs an action.</p><pre>// declarations<br>{addresses=[emergency_address]}</pre><pre>// logic-code<br>{</pre><pre>hook {</pre><pre>if (chain.blockheight==200000) and (transaction==False) then {send(addresses[0],amount=balance-0.001,fee=0.001)}</pre><pre>}</pre><p>In this case if the contract does not receive <em>any</em> transaction before blockheight 200k all funds are sent to the <em>emergency_address</em>. This could be further modified to a recurring check for a transaction to occur from a specific address or with a specific message content within the last x blocks of a given blockheight(s) activation.</p><p>We forsee integrating contract transactions into the node, then building out our tools section of the webwallet to allow easy GUI-based off the shelf contract formation from a user-address, allowing functionality like dead man’s switch, recurring payments, multiple signatory setups, atomic swaps, etc.</p><h3>Timeline</h3><p>We have begun to specify project silicon in our first QIP although there will undoubtedly be wide ranging changes as we grow the concept and begin to build tools and experiment on a new dedicated devnet. We hope to hard fork the network to implement silicon by early 2019, pending testing and a further third party audit.</p><p>We will make public our new code repositories in the coming days to allow the community to get involved and inspect progress realtime.</p><img src="https://medium.com/_/stat?event=post.clientViewed&referrerSource=full_rss&postId=2db14b103332" width="1" height="1"><hr><p><a href="https://medium.com/the-quantum-resistant-ledger/mainnet-v1-1-5-is-released-2db14b103332">Mainnet v1.1.5 is released</a> was originally published in <a href="https://medium.com/the-quantum-resistant-ledger">The Quantum Resistant Ledger</a> on Medium, where people are continuing the conversation by highlighting and responding to this story.</p>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[Discover Blockchains Conference Next Week!]]></title>
            <link>https://medium.com/the-quantum-resistant-ledger/discover-blockchains-conference-next-week-dab6e0b8651b?source=rss----507e55639b6c---4</link>
            <guid isPermaLink="false">https://medium.com/p/dab6e0b8651b</guid>
            <category><![CDATA[cryptocurrency]]></category>
            <category><![CDATA[discover-blockchains]]></category>
            <category><![CDATA[quantum-computing]]></category>
            <category><![CDATA[blockchain]]></category>
            <category><![CDATA[qrl]]></category>
            <dc:creator><![CDATA[Adam Koltun]]></dc:creator>
            <pubDate>Thu, 06 Sep 2018 17:14:07 GMT</pubDate>
            <atom:updated>2018-09-06T17:14:07.676Z</atom:updated>
            <content:encoded><![CDATA[<p><em>TL;DR — Who/What/Where/When/Why of Discover Blockchains Conference</em></p><figure><img alt="" src="https://cdn-images-1.medium.com/max/1024/1*WBRSkJxuWD8UlCnUlQ7PQQ.png" /></figure><h3>Who</h3><p>Discover Blockchains 2018 will be attended by:</p><ul><li>Adam: Lead Business Strategist</li></ul><h3>What</h3><p>Discover Blockchains is a conference that is, like the name implies, meant to introduce new people to the blockchain industry, as well as show people already interested in blockchain something they have not seen before. I will have an <a href="https://discoverblockchains.com/agenda/#agenda">opportunity to speak</a> at the conference, and I will try to tailor my talk (as I always do) to the particular audience in attendance.</p><p>Given how often I still meet people when giving talks who come up to me afterwards to tell me that they did not know quantum computing was even possible, let alone being actively developed, I think I will be able to introduce the crowd to some new ideas. QRL is not sponsoring this conference so if you are planning to attend, we will not have a booth.</p><h3>Where</h3><p><a href="https://www.hyatt.com/en-US/hotel/texas/hyatt-regency-houston/hourh">Hyatt Regency Houston, TX</a></p><h3>When</h3><p>September 16, 2018</p><p>My talk will be at 3:00pm in the Imperial East room</p><h3>Why</h3><p>As I have stated in such blogs previously, one of the nice things about blockchain conferences is that they are not all the same. To be blunt, were this conference not in the United States, I doubt I would have been able to attend. However, given that adoption and education are still two of the largest barriers facing cryptocurrency in general, and QRL in particular, I am very glad to be able to take this opportunity to hopefully educate the audience about not only quantum computing and blockchain, but what QRL is doing about it.</p><p>Secondarily, it is nice to not have to lose days of travel to attend a conference, as by the end of my Spring gauntlet of speaking engagements, I realized I had lost altogether too much time in airports, on airplanes, and recovering from those two experiences.</p><p>As always, if you will be in attendance and would like to meet up for a chat, feel free to message me on Discord, Twitter, or send me an email.</p><img src="https://medium.com/_/stat?event=post.clientViewed&referrerSource=full_rss&postId=dab6e0b8651b" width="1" height="1"><hr><p><a href="https://medium.com/the-quantum-resistant-ledger/discover-blockchains-conference-next-week-dab6e0b8651b">Discover Blockchains Conference Next Week!</a> was originally published in <a href="https://medium.com/the-quantum-resistant-ledger">The Quantum Resistant Ledger</a> on Medium, where people are continuing the conversation by highlighting and responding to this story.</p>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[x41 d-sec audit]]></title>
            <link>https://medium.com/the-quantum-resistant-ledger/x41-d-sec-audit-79d5243f0874?source=rss----507e55639b6c---4</link>
            <guid isPermaLink="false">https://medium.com/p/79d5243f0874</guid>
            <category><![CDATA[qrl]]></category>
            <dc:creator><![CDATA[Jack Matier]]></dc:creator>
            <pubDate>Mon, 27 Aug 2018 22:10:26 GMT</pubDate>
            <atom:updated>2018-08-27T22:10:26.896Z</atom:updated>
            <content:encoded><![CDATA[<h4>Project Update</h4><p><em>TLDR — x41 D-Sec audit has commenced, mobile wallet updates, wallet API improvements, OTC market opens, tipbots, and basic concepts videos</em></p><p>Our team is global, with members currently residing in The United States of America, Canada, United Kingdom, Australia, and India. There’s usually one person alive <em>and</em> awake every hour of the day, working on improving every aspect of this project.</p><figure><img alt="" src="https://cdn-images-1.medium.com/max/392/1*EhOqRFAO3PkLna9YzujHWg.png" /></figure><h4>x41 D-Sec — Our second Auditor after Red4Sec</h4><p>A foundational part of QRL is a sustained commitment to enterprise grade security and bringing on third party auditors.</p><p>Keeping in-line with this commitment, starting last <em>Monday</em>, the <a href="https://www.x41-dsec.de/">x41 D-Sec</a> team has begun an audit in earnest and is currently boring into our QRL code. This audit is shorter than our last at 2–3 weeks and covers the cryptography portion (ie XMSS) of our codebase, including Ledger code, and its implementation.</p><p>To give an idea of x41’s capabilities, some recent vulnerabilities discovered by x41 D-Sec involve <a href="https://www.x41-dsec.de/lab/blog/smartcards/">smartcards</a>, <a href="https://www.x41-dsec.de/lab/advisories/x41-2017-006-psftpd/">PSFTPd</a>, <a href="https://www.x41-dsec.de/lab/blog/kernel_userspace/">Kernal Fuzzing in Userspace,</a> and <a href="https://www.x41-dsec.de/lab/advisories/">more</a>.</p><figure><img alt="" src="https://cdn-images-1.medium.com/max/592/1*BhOu6u5wiJlvbH0cAEzHNQ.gif" /></figure><h4>Mobile Wallet Views</h4><p>Recently we spoke about the core backend of the mobile wallet being complete and it’s just working on the views to ensure a slick experience.</p><p>Thus far the main view and backup view is complete, with only a few more key views remaining.</p><p>As a reminder, there will be both iOS and Android versions.</p><p>Like everything at QRL, this is under an MIT license and can be found on <a href="https://github.com/theQRL/mobile-wallet">Github</a>.</p><h4>Wallet Daemon API</h4><p>Further improvements have been made to our Wallet Daemon API which automates things like Slave Transactions so that exchanges can more easily integrate QRL.</p><h4>OTC Market on Discord Opens</h4><p>Until our mainnet coin is listed on an exchange, we have opened an OTC (Over the Counter) trading channel with the kind assistance of our Butler.</p><p>It should be emphasized that doing <em>any</em> OTC trading is at your own risk, however, much of this can be mitigated by selecting a trustworthy escrow (third party to hold both parties funds and release them upon agreement).</p><p>If you would like to take part in trading your Quanta, you can <a href="https://discord.gg/vqCwVqH">join</a> and do so today.</p><figure><img alt="" src="https://cdn-images-1.medium.com/max/536/1*UVxlRS2HOdrllPDYb0OwnQ.png" /></figure><h4>More Improvements</h4><p><strong>Tipbots and Faucets</strong></p><p>Work is being initiated on our tipbot and faucet. It’s still in the very early stages so if you have seen a faucet or tipbot that you like, let us know on <a href="https://www.reddit.com/r/qrl">Reddit</a> or <a href="https://discord.gg/jBT6BEp">Discord</a>.</p><figure><img alt="" src="https://cdn-images-1.medium.com/max/728/1*SpqBxGHiRkKsoCBRNoCfIw.png" /></figure><p><strong>Basic Concepts Videos</strong></p><p>Basics concepts videos would explain certain aspects of QRL to everyday folks. We have established a few that people would be interested in.</p><ul><li>Sending coins to QRL wallet</li><li>Making a wallet</li><li>CLI wallet use: sending / balance / etc</li><li>Explorer explanation</li><li>OTS Keys</li><li>Token use</li></ul><p>What would you like to see first? Have a different suggestion for a Basic Concepts video, let us know on <a href="https://www.reddit.com/r/qrl">Reddit</a> or <a href="https://discord.gg/jBT6BEp">Discord</a>.</p><img src="https://medium.com/_/stat?event=post.clientViewed&referrerSource=full_rss&postId=79d5243f0874" width="1" height="1"><hr><p><a href="https://medium.com/the-quantum-resistant-ledger/x41-d-sec-audit-79d5243f0874">x41 d-sec audit</a> was originally published in <a href="https://medium.com/the-quantum-resistant-ledger">The Quantum Resistant Ledger</a> on Medium, where people are continuing the conversation by highlighting and responding to this story.</p>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[Go-QRL]]></title>
            <link>https://medium.com/the-quantum-resistant-ledger/go-qrl-46186f8635c5?source=rss----507e55639b6c---4</link>
            <guid isPermaLink="false">https://medium.com/p/46186f8635c5</guid>
            <category><![CDATA[x41]]></category>
            <category><![CDATA[qrl]]></category>
            <category><![CDATA[golang]]></category>
            <category><![CDATA[blockchain]]></category>
            <category><![CDATA[security-audit]]></category>
            <dc:creator><![CDATA[Jack Matier]]></dc:creator>
            <pubDate>Mon, 20 Aug 2018 17:17:05 GMT</pubDate>
            <atom:updated>2018-08-20T17:17:05.683Z</atom:updated>
            <content:encoded><![CDATA[<h4>Project Update</h4><p><em>TLDR — Go-QRL Node repo public, Project Carbon, incremental wallet update to v1.0.2, and Developer Meeting Summaries</em></p><p>Go.</p><p>It’s what the team and network have been doing and will continue to do. Just as the QRL network’s blocks move forward, so too will we.</p><h4>Go-QRL Node</h4><p>Our <a href="https://golang.org/">Golang</a> node of QRL has now been released to a public repository and is under active development.</p><p><a href="https://en.wikipedia.org/wiki/Go_(programming_language)">Go</a> (also known as Golang) is a new compiled programming language developed by Google in 2009 that makes it easy to build simple, reliable, and efficient software. This will allow for faster, more consistent QRL nodes with full-concurrency throughout.</p><p>You can find the repository on our <a href="https://github.com/theQRL">Github</a> at <a href="https://github.com/theQRL/go-qrl/">go-qrl</a>. It should be stressed that this is a <strong>work in progress</strong> and <strong>NOT TO BE USED IN PRODUCTION— ONLY FOR VIEWING PURPOSES</strong>.</p><h4>Project Carbon — Smart Contracts</h4><p>Continued work on the Smart Contract QIP (QRL Improvement Proposal), now dubbed <strong>Project Carbon</strong>, is well under way. Last week, attack surfaces were researched, discussed, and reflected in the upcoming QIP + blog. Along with this, compiler structure is making progress and is expected by this weekend.</p><p>There is a <em>strong</em> focus on balancing the functionality of our Smart Contract platform with preventing exploits. Feature wise, the emphasis is on financial applications, so expect things like Escrow Payments, Recurring Payment Schedules, decentralized automated multiple-signatory accounts, and more.</p><h4>Binary wallet v1.0.2 released</h4><p>An incremental update for our binary wallet for Windows, Mac and Linux has been <a href="https://github.com/theQRL/qrl-wallet/releases/tag/v1.0.2">released</a>!</p><p><strong>Changelog</strong></p><ul><li>Improved Mobile UI</li><li>Resolves transaction display bugs</li><li>Shows warning when sending to 0x Ethereum addresses</li><li>Updated CI to support CircleCI v2</li><li>Updated Meteor base to 1.7.0.4</li></ul><h4>Developer Meeting Summary</h4><p>Those with a keen watchful eye on our github may have already noticed the first release of our developer meeting summary. This summary will allow everyone to get an inside look on what is discussed every Thursday at 19:00 UTC.</p><p>Some highlights not mentioned in this blog are:</p><p><strong>BECH32 QIP</strong></p><ul><li>Planning parallel use of Q-hexstrings and BECH32 addresses</li><li>Andrew undertaking exploratory work</li></ul><p><strong>Interface/interaction</strong></p><ul><li>Early stage QIP on interaction design to visualise network activity discussed: primary draft on wallet in progress.</li><li>To be expanded both for explorer and smart contracts.</li><li>Outreach with interaction designers/interested parties in the crypto space discussed.</li></ul><p><strong>x41 audit</strong></p><ul><li>Audit to start Monday 20th August: scope and logistics discussed</li></ul><p>Be sure to read the full summary <a href="https://github.com/theQRL/dev-meetings/blob/master/2018/08/16.md">here</a>. This is something we are trialing so it may not be a permanent feature. If you find you really enjoy it, let us know in our <a href="https://discord.gg/jBT6BEp">Discord</a> or <a href="https://www.reddit.com/r/qrl">Reddit</a>.</p><img src="https://medium.com/_/stat?event=post.clientViewed&referrerSource=full_rss&postId=46186f8635c5" width="1" height="1"><hr><p><a href="https://medium.com/the-quantum-resistant-ledger/go-qrl-46186f8635c5">Go-QRL</a> was originally published in <a href="https://medium.com/the-quantum-resistant-ledger">The Quantum Resistant Ledger</a> on Medium, where people are continuing the conversation by highlighting and responding to this story.</p>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[QRL Mainnet v1.1.1 Released]]></title>
            <link>https://medium.com/the-quantum-resistant-ledger/qrl-mainnet-v1-1-1-released-631ebc4d4208?source=rss----507e55639b6c---4</link>
            <guid isPermaLink="false">https://medium.com/p/631ebc4d4208</guid>
            <category><![CDATA[wallet]]></category>
            <category><![CDATA[golang]]></category>
            <category><![CDATA[qrl]]></category>
            <category><![CDATA[blockchain]]></category>
            <category><![CDATA[api-integration]]></category>
            <dc:creator><![CDATA[Jack Matier]]></dc:creator>
            <pubDate>Fri, 10 Aug 2018 21:02:29 GMT</pubDate>
            <atom:updated>2018-08-10T21:19:14.357Z</atom:updated>
            <content:encoded><![CDATA[<p><em>TLDR — QRL mainnet v1.1.1 is released and brings a wallet API, wallet daemon, greater stability, and other improvements.</em></p><p>At roughly 65,000 blocks after genesis, <a href="https://github.com/theQRL/QRL/releases/tag/v1.1.1">QRL mainnet v1.1.1</a> was born, and with it comes back end non-breaking improvements. If you’re running a node you can update today:</p><pre>pip3 install qrl --upgrade</pre><h4>Improvements are</h4><ul><li>Added support for Wallet API &amp; Wallet Daemon</li><li>Fix for state validation of stale transaction in mempool ( <a href="https://github.com/theQRL/QRL/issues/1538">#1538</a> )</li><li>Mining Address are displayed properly during node start</li><li>CLI token_list now shows token name &amp; symbol</li><li>Added more unit tests</li><li>Update cryptography module to 2.3</li><li>Removed wallet.json from repo</li><li>Removed pycrypto module from test_requirements.txt</li></ul><h4>Wallet API &amp; Daemon</h4><p>One of the new features is the Wallet Daemon &amp; Wallet API which allows for extensive manipulation of <a href="https://api.theqrl.org/#wallet-api">wallet functions</a> through our <a href="https://api.theqrl.org/#qrl-api">gRPC API</a>, an important feature for exchange integration.</p><p>After the update, you can run the wallet daemon (there is no response when you do so)</p><pre>$ qrl_walletd</pre><p>From there you can go over and install the <a href="https://github.com/theQRL/walletd-rest-proxy">walletd-rest-proxy</a> on github. Be sure to use golang &gt;1.8.</p><pre>go get github.com/theQRL/walletd-rest-proxy<br>cd $GOPATH/src/github.com/theQRL/walletd-rest-proxy<br>go build<br>./walletd-rest-proxy -serverIPPort 127.0.0.1:5359 -walletServiceEndpoint 127.0.0.1:19010</pre><p>This opens access to our <a href="https://api.theqrl.org/#wallet-api">wallet API</a> with <em>a lot</em> of things a person can do.</p><figure><img alt="" src="https://cdn-images-1.medium.com/max/826/1*jFvqV54R7sQhhQfWBoxdig.png" /></figure><h4>Open Source Contribution Guide (decentralized improvements)</h4><p>We would welcome your help and support as we move to further decentralize this project as one of our longstanding goals.</p><p>For that we are preparing a contribution guide which will be released shortly. While you’re waiting, you can check out some of our <a href="http://These &#39;help wanted&#39; labels are for the public? https://github.com/theQRL/QRL/issues?q=is%3Aissue+is%3Aopen+label%3A%22Help+Wanted%22">issues with the label “Help Wanted”</a>, read our <a href="https://docs.theqrl.org">Documentation</a>, and ask questions in our <a href="https://discord.gg/RX5SWPN">Discord</a> or <a href="https://www.reddit.com/r/QRL/">Reddit</a> community to become more familiar with everything.</p><img src="https://medium.com/_/stat?event=post.clientViewed&referrerSource=full_rss&postId=631ebc4d4208" width="1" height="1"><hr><p><a href="https://medium.com/the-quantum-resistant-ledger/qrl-mainnet-v1-1-1-released-631ebc4d4208">QRL Mainnet v1.1.1 Released</a> was originally published in <a href="https://medium.com/the-quantum-resistant-ledger">The Quantum Resistant Ledger</a> on Medium, where people are continuing the conversation by highlighting and responding to this story.</p>]]></content:encoded>
        </item>
    </channel>
</rss>